//=============================================================================
//
// 火花のエフェクトの処理 [spark.h]
// Author : 伊藤陽梧
//
//=============================================================================
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "billboard.h"
#include "particle.h"
#include "spark.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CSpark::CSpark()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CSpark::~CSpark()
{
}
//=============================================================================
// 生成処理
//=============================================================================
CSpark * CSpark::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, D3DXCOLOR col, int Life)
{
	// CSparkクラスのポインタ
	CSpark *pSpark;

	// メモリ確保
	pSpark = new CSpark;

	// 位置座標設定
	pSpark->SetPos(pos);

	// サイズ設定
	pSpark->SetSize(size);

	// カラー設定
	pSpark->SetColor(col);

	// カラー設定
	pSpark->SetLife(Life);

	// アニメーションの設定
	pSpark->SetAnimation(SPARK_COUNTANIM, SPARK_PATTERNANIM, SPARK_TIMEANIM);

	// 初期化
	pSpark->Init();

	// CSparkクラスのポインタを返す
	return pSpark;
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CSpark::Init()
{
	// CParticleクラスのInit
	CParticle::Init(TEX_TYPE_SPARK);
	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CSpark::Uninit(void)
{
	// 終了
	CParticle::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CSpark::Update(void)
{
	// 更新
	CParticle::Update();

}
//=============================================================================
// 描画処理
//=============================================================================
void CSpark::Draw(void)
{
	// 描画
	CParticle::Draw();
}